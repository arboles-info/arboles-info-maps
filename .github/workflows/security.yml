name: Security Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Ejecutar análisis de seguridad diariamente a las 2:00 AM UTC
    - cron: '0 2 * * *'

jobs:
  # Análisis de vulnerabilidades con CodeQL
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-and-quality
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  # Análisis de dependencias Python
  python-security:
    name: Python Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit semgrep
    
    - name: Run safety check (vulnerabilidades en dependencias)
      run: |
        pip install -r requirements.txt
        safety check --json --output safety-report.json || true
        safety check
    
    # Bandit removido para simplificar el pipeline
    
    - name: Run semgrep (análisis estático avanzado)
      run: |
        semgrep --config=auto --json --output=semgrep-report.json . || true
        semgrep --config=auto .
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: python-security-reports
        path: |
          safety-report.json
          semgrep-report.json

  # TruffleHog removido para simplificar el pipeline

  # JavaScript security removido para simplificar el pipeline

  # Configuration security removido para simplificar el pipeline

  # License compliance removido para simplificar el pipeline

  # Resumen de seguridad
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [codeql-analysis, python-security]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Generate security summary
      run: |
        echo "# Security Scan Summary" > security-summary.md
        echo "Generated on: $(date)" >> security-summary.md
        echo "" >> security-summary.md
        
        echo "## Job Results" >> security-summary.md
        echo "- CodeQL Analysis: ${{ needs.codeql-analysis.result }}" >> security-summary.md
        echo "- Python Security: ${{ needs.python-security.result }}" >> security-summary.md
        echo "" >> security-summary.md
        
        echo "## Reports Generated" >> security-summary.md
        find . -name "*.json" -type f | while read file; do
          echo "- $(basename "$file"): $(wc -l < "$file") lines" >> security-summary.md
        done
        
        cat security-summary.md
    
    - name: Upload security summary
      uses: actions/upload-artifact@v4
      with:
        name: security-summary
        path: security-summary.md
